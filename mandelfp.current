	.file	"mandelfp.c"
	.option nopic
	.attribute arch, "rv32i2p0_m2p0_a2p0_c2p0"
	.attribute unaligned_access, 0
	.attribute stack_align, 16
# GNU C17 (SiFive GCC 8.3.0-2019.08.0) version 8.3.0 (riscv64-unknown-elf)
#	compiled by GNU C version 5.4.0 20160609, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP

# GGC heuristics: --param ggc-min-expand=30 --param ggc-min-heapsize=4096
# options passed:  -imultilib rv32imac/ilp32
# -iprefix /home/martin/2019/riscv/riscv64-unknown-elf-gcc-8.3.0-2019.08.0-x86_64-linux-ubuntu14/bin/../lib/gcc/riscv64-unknown-elf/8.3.0/
# -isysroot /home/martin/2019/riscv/riscv64-unknown-elf-gcc-8.3.0-2019.08.0-x86_64-linux-ubuntu14/bin/../riscv64-unknown-elf
# mandelfp.c -march=rv32imac -mabi=ilp32 -Os -fverbose-asm
# options enabled:  -faggressive-loop-optimizations -falign-functions
# -falign-jumps -falign-labels -falign-loops -fauto-inc-dec
# -fbranch-count-reg -fcaller-saves -fchkp-check-incomplete-type
# -fchkp-check-read -fchkp-check-write -fchkp-instrument-calls
# -fchkp-narrow-bounds -fchkp-optimize -fchkp-store-bounds
# -fchkp-use-static-bounds -fchkp-use-static-const-bounds
# -fchkp-use-wrappers -fcode-hoisting -fcombine-stack-adjustments -fcommon
# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
# -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize
# -fdevirtualize-speculatively -fdwarf2-cfi-asm -fearly-inlining
# -feliminate-unused-debug-types -fexpensive-optimizations
# -fforward-propagate -ffp-int-builtin-inexact -ffunction-cse -fgcse
# -fgcse-lm -fgnu-runtime -fgnu-unique -fguess-branch-probability
# -fhoist-adjacent-loads -fident -fif-conversion -fif-conversion2
# -findirect-inlining -finline -finline-atomics -finline-functions
# -finline-functions-called-once -finline-small-functions -fipa-bit-cp
# -fipa-cp -fipa-icf -fipa-icf-functions -fipa-icf-variables -fipa-profile
# -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra -fipa-vrp
# -fira-hoist-pressure -fira-share-save-slots -fira-share-spill-slots
# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
# -fleading-underscore -flifetime-dse -flra-remat -flto-odr-type-merging
# -fmath-errno -fmerge-constants -fmerge-debug-strings
# -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
# -fpartial-inlining -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays
# -free -freg-struct-return -freorder-blocks -freorder-functions
# -frerun-cse-after-loop -fsched-critical-path-heuristic
# -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
# -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
# -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-fusion
# -fschedule-insns2 -fsection-anchors -fsemantic-interposition
# -fshow-column -fshrink-wrap -fshrink-wrap-separate -fsigned-zeros
# -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-backprop -fssa-phiopt
# -fstdarg-opt -fstore-merging -fstrict-aliasing
# -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
# -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
# -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim
# -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
# -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
# -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
# -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
# -ftree-vrp -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss -mdiv
# -mexplicit-relocs -mplt -mriscv-attribute -mstrict-align

	.text
	.align	1
	.globl	mandelfp
	.type	mandelfp, @function

 

mandelfp:
   #  li t0,-25700
	# add	sp,sp,t0
	 
	 li t2,64 #maxiter
	 li a1,-20666 #xmin -1.26136183
	 li a2,-20441 #xmax -1.24763480
	 li a3,  6168 #ymin 0.37648215
	 li a4,  6337 #ymax 0.38676353
	 li a5, -1 #s zoom direction toggle
	 

	 
mainloop:
     li a6,0 #z
     mul a7, a5, a6 #z*s
     sub a1,a1,a7 #xmin-=z*s;
     add a2,a2,a7 #xmax+=z*s;
     sub a3,a3,a7 #ymin-=z*s;
     add a4,a4,a7 #ymax+=z*s;
     
     #s2=xs
     #s3=ys
     #s4 divider 5
     li s4,5
     sub s2,a2,a1 #(xmax-xmin)
     div s2,s2,s4 #32/SCREEN_WIDTH = /5
     
     sub s3,a4,a3 #(xmax-xmin)
     div s3,s3,s4 #32/SCREEN_WIDTH = /5
     
     #s5 =y
     li s5,0
loopy:
     #s7 = q
     mul s7,s5,s3 #y*ys
     srai s7,s7,4 #/16
     add s7,s7,a3 #+ymin

     #s6 =x
	 li s6,0

loopx:
     #s8 = p
     mul s8,s6,s2 #x*xs
     srai s8,s8,5 #/32
     add s8,s8,a1 #+xmin
     
     li s9,0#xn
     li s10,0#x0
     li s11,0#y0
innerloop:
     #xn=mul((x0+y0),(x0-y0)) +p;
     add t0,s10,s11
     sub t1,s10,s11
     mul s9,t0,t1
     srai s9,s9,14
     add s9,s9,s8
     
     #y0=mul(32768,mul(x0,y0)) +q;
     mul t0,s10,s11
     srai t0,t0,14
     li t1,32768
     mul s11,t1,t0
     srai s11,s11,14
     add s11,s11,s7
     
     #x0=xn;
     mv s10,s9 
     
     
     mul t0,s9,s9 #xn**2
     srai t0,t0,14
     mul t1,s1,s1 #y0**2
     srai t1,t1,14
     add t0,t0,t1
     #OR AFTER ADD? srai t0,t0,14 #this could overflow!!
     
     li	t1,65536		# tmp201,
	 bgt t0,t1, exitloop
     
     add t2,t2,-1
     bne t2,zero,innerloop
     
exitloop:
#somehow store to linebuffer, urks
        #y*320+x*2
     li t1,320
     mul a0,t1,s5
     add a0,a0,s6
     add a0,a0,s6 #+2*x
     
     la t1,buffer
     add a0,a0,t1 #add that to buffer
     
     sb t0,0(a0)
     sb t0,1(a0)
     
     #next x
     add s6,s6,1
     li t0,160
     blt s6,t0,loopx
     
     #next y
     add s5,s5,1
     li t0,80
     blt s5,t0,loopy
     
     #put linebuffer adress to a0 first
     la a0, buffer
     call	dp_imagefill565	
busy:
     j busy
     #keep zooming
     add a6,a6,1
     li t0,200
     blt a6,t0, mainloop
     
     
     li t0,-1
     mul a5,a5,t0
     j mainloop

	  
	 #li t0,25700
	 #add	sp,sp,t0
	 
	.size	mandelfp, .-mandelfp
	.ident	"GCC: (SiFive GCC 8.3.0-2019.08.0) 8.3.0"

     
.data     
buffer:
.zero 25700
	  
